[tox]
envlist = copying,{py37,py38,py39,py310}-{lint,tests,cli,checksetup}
skip_missing_interpreters = True

[testenv]
setenv =
    tests:      {[testenv:tests]setenv}
passenv =
    tests:      {[testenv:tests]passenv}
whitelist_externals =
    cli:        {[testenv:cli]whitelist_externals}
deps=
    -rtests_utils/test-requirements.txt
    checksetup: {[testenv:checksetup]deps}
    tests:      {[testenv:tests]deps}
commands=
    tests:      {[testenv:tests]commands}
    lint:       {[testenv:lint]commands}
    cli:        {[testenv:cli]commands}
    checksetup: {[testenv:checksetup]commands}

[testenv:tests]
setenv = MPLCONFIGDIR = {toxinidir}/tests_utils/matplotlib
passenv = MPLCONFIGDIR
deps=
    -rrequirements.txt
commands=
    pytest {posargs}

[testenv:cli]
deps=
    git+https://github.com/iot-lab/cli-tools.git@master#egg=iotlabcli
whitelist_externals=
    /bin/bash
    /usr/bin/bash
commands=
    bash -exc "for i in plot_oml_*; do $i --help >/dev/null; done"

[testenv:copying]
whitelist_externals=
    /bin/bash
    /usr/bin/bash
commands=
    bash tests_utils/check_license.sh

[testenv:lint]
commands=
    pycodestyle oml_plot_tools setup.py
    pylint --rcfile=setup.cfg oml_plot_tools setup.py
    flake8
    twine check {distdir}/*

[testenv:checksetup]
deps =
    docutils
    readme-renderer
skip_install = True
usedevelop = False
commands =
    python setup.py check --strict --metadata
